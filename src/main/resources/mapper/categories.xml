<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CategoriesDao">
   <resultMap id="categoryResultMap" type="com.example.demo.model.CategoriesModel">
        <id property="categoryId" column="categoryId"/>
        <result property="categoryName" column="categoryName"/>
        <result property="image" column="image"/>

       <collection property="shops" ofType="com.example.demo.model.ShopCategoriesModel">
           <result property="sid" column="sid"/>
           <result property="file" column="file"/>
           <result property="name" column="name"/>
           <result property="tel" column="tel"/>
           <result property="addr" column="addr"/>
           <result property="openTime" column="openTime"/>
           <result property="closeTime" column="closeTime"/>
           <result property="categoryId" column="shop_categoryId"/>
           <result property="total_good" column="total_good"/>
           <result property="userId" column="userId"/>
       </collection>
   </resultMap>

    <select id="CategoriesList"  resultMap="categoryResultMap">
        SELECT
            c.categoryId, c.categoryName, c.image,
            si.sid, si.file, si.name, si.tel, si.addr,
            date_format(si.openTime,'%H:%i') AS openTime,
            date_format(si.closeTime,'%H:%i') AS closeTime,
            si.categoryId as shop_categoryId, si.userId, (select SUM(good) from good where si.sid = sid) AS total_good
        FROM
            categories AS c
        LEFT OUTER JOIN
            shop_info AS si ON c.categoryId = si.categoryId
        ORDER BY
            c.categoryId
    </select>

    <select id="foodCategories"  resultType="com.example.demo.model.RmRankingModel">
        SELECT
            c.categoryId, c.categoryName, c.image,
            si.sid, si.file, si.name, si.tel, si.addr,
            date_format(si.openTime,'%H:%i') AS openTime,
            date_format(si.closeTime,'%H:%i') AS closeTime,
            si.categoryId as shop_categoryId, si.userId, (select SUM(good) from good where si.sid = sid) AS total_good
        FROM
            categories AS c
        LEFT OUTER JOIN
            shop_info AS si ON c.categoryId = si.categoryId
        WHERE
            13 > c.categoryId
        GROUP BY
            c.categoryId
        ORDER BY
            c.categoryId
    </select>
</mapper>



